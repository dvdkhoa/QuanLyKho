@using QuanLyKho.Models.Entities
@model Order;
@using QuanLyKho.Extensions;

@{
    ViewData["Title"] = "Order details";

    var warehouses = ViewBag.warehouses as List<ProductWareHouse>;
}

@section Styles {
    <link rel="stylesheet" href="~/admin/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/admin/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="~/admin/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
    <!-- SweetAlert2 -->
    <link rel="stylesheet" href="~/admin/plugins/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css">

}


<!-- /.card -->
<div class="card">
    <div class="card-header">
        <h5>Order details</h5>
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Attribute</th>
                    <th>Value</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Id</td>
                    <td>@Model.Id</td>
                </tr>
                <tr>
                    <td>Customer</td>
                    <td>@(Model.CustomerName) (id: @Model.CustomerId)</td>
                </tr>
                <tr>
                    <td>Phone number</td>
                    <td>@Model.PhoneNumber</td>
                </tr>
                <tr>
                    <td>Email</td>
                    <td>@Model.Email</td>
                </tr>
                <tr>
                    <td>Address</td>
                    <td>@Model.Address</td>
                </tr>
                <tr>
                    <td>Note</td>
                    <td>@Model.Note</td>
                </tr>
                <tr>
                    <td>Payment method</td>
                    <td>@Model.PaymentMethod</td>
                </tr>
                <tr>
                    <td>Tmp total</td>
                    <td>@Helpers.PriceToVND(Model.TmpTotal) vnđ</td>
                </tr>
                <tr>
                    <td>Total</td>
                    <td>@Helpers.PriceToVND(Model.Total) vnđ</td>
                </tr>
                <tr>
                    <td>Staff</td>
                    @if(Model.Staff != null){
                        <td>@Model.Staff?.Name - id : @Model.StaffId</td>
                    }
                    else
                    {
                        <td></td>
                    }
                </tr>
                <tr>
                    <td>Store</td>
                    @if(Model.Store != null){
                        <td>@Model.Store?.Name - id: @Model.StoreId</td>
                    }
                    else
                    {
                        <td></td>
                    }
                </tr>
                <tr>
                    <td>Payment status</td>
                    <td>@Model.PaymentStatus</td>
                </tr>
                <tr>
                    <td>Ship status</td>
                    <td>@Model.ShipStatus</td>
                </tr>
                <tr>
                    <td>Created time</td>
                    <td>@Model.CreatedTime.ToCustomDateTimeStr()</td>
                </tr>
                <tr>
                    <td>Last updated</td>
                    <td>@Model.LastUpdated.ToCustomDateTimeStr()</td>
                </tr>
            </tbody>
        </table>

        <hr />

        @if (Model != null && Model.OrderDetails?.Count() > 0)
        {
            <form asp-action="Details" method="post">
                <input type="hidden" name="orderId" value="@Model.Id" />

                <input type="hidden" name="orderDetailIdsJson" value="@Json.Serialize(Model.OrderDetails.Select(od => od.Id).ToArray()).ToString()" />

                <div class="text-danger" asp-validation-summary="All"></div>

                <table id="example1" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Product</th>
                            <th>Image</th>
                            <th>Price(vnd)</th>
                            <th>Quantity</th>
                            <th>Amount(vnd)</th>
                            <th>
                                Warehouse
                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OrderDetails)
                        {
                            var warehouseByProductId = warehouses.Where(pw => pw.ProductId == item.ProductId).ToList();
                            <tr>
                                <td>@item.Id</td>
                                <td class="w-25">@item.ProductName</td>
                                <td>nội dung hình ảnh</td>
                                <td>@Helpers.PriceToVND(item.Price)</td>
                                <td>@item.Quantity</td>
                                <td>@Helpers.PriceToVND(item.getAmount())</td>
                                @if (Model.ShipStatus == ShipStatus.NotApproved)
                                {
                                    <td>
                                        <select class="form-control" name="productWarehouseIds[]">
                                            <option value="0">Select warehouse</option>
                                            @if (warehouseByProductId != null && warehouseByProductId.Count > 0)
                                            {
                                                foreach (var pw in warehouseByProductId)
                                                {
                                                    <option value="@pw.Id">@(pw.WareHouse.Name)(@pw.WareHouseId) - SL: @pw.Quantity</option>
                                                }
                                            }
                                        </select>
                                    </td>
                                }
                                else
                                {
                                    <td>@item?.ProductWareHouse?.WareHouse.Name</td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
                <a class="" asp-action="Index">Back to order list</a>
                @if (Model.ShipStatus == ShipStatus.NotApproved)
                {
                    <button class="btn btn-primary float-right">Approve</button>
                }
            </form>

        }
    </div>

    <!-- /.card-body -->
</div>
<!-- /.card -->
